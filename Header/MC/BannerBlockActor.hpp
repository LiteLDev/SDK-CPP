/**
 * @file  BannerBlockActor.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockActor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class BannerBlockActor.
 *
 */
class BannerBlockActor : public BlockActor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BANNERBLOCKACTOR
public:
    class BannerBlockActor& operator=(class BannerBlockActor const &) = delete;
    BannerBlockActor(class BannerBlockActor const &) = delete;
    BannerBlockActor() = delete;
#endif

public:
    /**
     * @note   Virtual function table index: 0
     * @symbol 
     */
    virtual ~BannerBlockActor();
    /**
     * @note   Virtual function table index: 1
     * @symbol ?load@BannerBlockActor@@UEAAXAEAVLevel@@AEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     */
    virtual void load(class Level &, class CompoundTag const &, class DataLoadHelper &);
    /**
     * @note   Virtual function table index: 2
     * @symbol ?save@BannerBlockActor@@UEBA_NAEAVCompoundTag@@@Z
     */
    virtual bool save(class CompoundTag &) const;
    /**
     * @note   Virtual function table index: 7
     * @symbol ?tick@BannerBlockActor@@UEAAXAEAVBlockSource@@@Z
     */
    virtual void tick(class BlockSource &);
    /**
     * @note   Virtual function table index: 11
     * @symbol ?onPlace@BannerBlockActor@@UEAAXAEAVBlockSource@@@Z
     */
    virtual void onPlace(class BlockSource &);
    /**
     * @note   Virtual function table index: 12
     * @symbol 
     */
    virtual void __unk_vfn_12();
    /**
     * @note   Virtual function table index: 16
     * @symbol 
     */
    virtual void __unk_vfn_16();
    /**
     * @note   Virtual function table index: 28
     * @symbol 
     */
    virtual void __unk_vfn_28();
    /**
     * @note   Virtual function table index: 29
     * @symbol 
     */
    virtual void __unk_vfn_29();
    /**
     * @note   Virtual function table index: 30
     * @symbol 
     */
    virtual void __unk_vfn_30();
    /**
     * @note   Virtual function table index: 32
     * @symbol 
     */
    virtual void __unk_vfn_32();
    /**
     * @note   Virtual function table index: 33
     * @symbol 
     */
    virtual void __unk_vfn_33();
    /**
     * @note   Virtual function table index: 34
     * @symbol 
     */
    virtual void __unk_vfn_34();
    /**
     * @note   Virtual function table index: 35
     * @symbol ?_getUpdatePacket@BannerBlockActor@@MEAA?AV?$unique_ptr@VBlockActorDataPacket@@U?$default_delete@VBlockActorDataPacket@@@std@@@std@@AEAVBlockSource@@@Z
     */
    virtual std::unique_ptr<class BlockActorDataPacket> _getUpdatePacket(class BlockSource &);
    /**
     * @note   Virtual function table index: 36
     * @symbol ?_onUpdatePacket@BannerBlockActor@@MEAAXAEBVCompoundTag@@AEAVBlockSource@@@Z
     */
    virtual void _onUpdatePacket(class CompoundTag const &, class BlockSource &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_BANNERBLOCKACTOR
#endif
    /**
     * @symbol ??0BannerBlockActor@@QEAA@AEBVBlockPos@@@Z
     */
    MCAPI BannerBlockActor(class BlockPos const &);
    /**
     * @symbol ?getBaseColorInt@BannerBlockActor@@QEBAEXZ
     */
    MCAPI unsigned char getBaseColorInt() const;
    /**
     * @symbol ?setItemValues@BannerBlockActor@@QEAAXAEBVItemStackBase@@@Z
     */
    MCAPI void setItemValues(class ItemStackBase const &);
MCAPI static int const MAX_PATTERNS;
MCAPI static std::string const TAG_BASE_COLOR;
MCAPI static std::string const TAG_COLOR;
MCAPI static std::string const TAG_PATTERN;
MCAPI static std::string const TAG_PATTERNS;
MCAPI static std::string const TAG_TYPE;
    /**
     * @symbol ?getBannerType@BannerBlockActor@@SA?AW4BannerBlockType@@PEBVCompoundTag@@@Z
     */
    MCAPI static enum BannerBlockType getBannerType(class CompoundTag const *);
    /**
     * @symbol ?getBaseColor@BannerBlockActor@@SAHAEBVItemStack@@@Z
     */
    MCAPI static int getBaseColor(class ItemStack const &);
    /**
     * @symbol ?getPatternCount@BannerBlockActor@@SAHPEBVCompoundTag@@@Z
     */
    MCAPI static int getPatternCount(class CompoundTag const *);
    /**
     * @symbol ?isDefaultBanner@BannerBlockActor@@SA_NAEBVItemStackBase@@@Z
     */
    MCAPI static bool isDefaultBanner(class ItemStackBase const &);
    /**
     * @symbol ?removeLastPattern@BannerBlockActor@@SA_NAEAVItemStack@@AEAVPlayer@@@Z
     */
    MCAPI static bool removeLastPattern(class ItemStack &, class Player &);

};