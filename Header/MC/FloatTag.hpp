/**
 * @file  FloatTag.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Tag.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class FloatTag.
 *
 */
class FloatTag : public Tag {

#define AFTER_EXTRA
// Add Member There
float val;

public:
    LIAPI float& value();
    LIAPI FloatTag& operator=(float val);
    LIAPI static std::unique_ptr<FloatTag> create(float val = 0.0f);
    LIAPI bool set(float val);
    LIAPI float get();
    LIAPI operator float() const;

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FLOATTAG
public:
    class FloatTag& operator=(class FloatTag const &) = delete;
    FloatTag(class FloatTag const &) = delete;
#endif

public:
    /**
     * @note   Virtual function table index: 0
     * @symbol 
     */
    virtual ~FloatTag();
    /**
     * @note   Virtual function table index: 2
     * @symbol ?write@FloatTag@@UEBAXAEAVIDataOutput@@@Z
     */
    virtual void write(class IDataOutput &) const;
    /**
     * @note   Virtual function table index: 3
     * @symbol ?load@FloatTag@@UEAAXAEAVIDataInput@@@Z
     */
    virtual void load(class IDataInput &);
    /**
     * @note   Virtual function table index: 4
     * @symbol ?toString@FloatTag@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     */
    virtual std::string toString() const;
    /**
     * @note   Virtual function table index: 5
     * @symbol ?getId@FloatTag@@UEBA?AW4Type@Tag@@XZ
     */
    virtual enum Tag::Type getId() const;
    /**
     * @note   Virtual function table index: 6
     * @symbol ?equals@FloatTag@@UEBA_NAEBVTag@@@Z
     */
    virtual bool equals(class Tag const &) const;
    /**
     * @note   Virtual function table index: 9
     * @symbol ?copy@FloatTag@@UEBA?AV?$unique_ptr@VTag@@U?$default_delete@VTag@@@std@@@std@@XZ
     */
    virtual std::unique_ptr<class Tag> copy() const;
    /**
     * @note   Virtual function table index: 10
     * @symbol ?hash@FloatTag@@UEBA_KXZ
     */
    virtual unsigned __int64 hash() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_FLOATTAG
#endif
    /**
     * @symbol ??0FloatTag@@QEAA@XZ
     */
    MCAPI FloatTag();
    /**
     * @symbol ??0FloatTag@@QEAA@M@Z
     */
    MCAPI FloatTag(float);

};