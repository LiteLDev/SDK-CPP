/**
 * @file  persona.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC namespace persona.
 *
 */
namespace persona {

#define AFTER_EXTRA
// Add Member There
enum AnimatedTextureType;
enum PieceType;

#undef AFTER_EXTRA
MCAPI extern std::string const ANIMATED_128X128_NAME;
MCAPI extern std::string const ANIMATED_128X128_TEXTURE_CONTROLLER_FIRST_PERSON;
MCAPI extern std::string const ANIMATED_128X128_TEXTURE_CONTROLLER_THIRD_PERSON;
MCAPI extern class HashedString const ANIMATED_128X128_TEXTURE_FRAMES_VARIABLE;
MCAPI extern std::string const ANIMATED_32X32_NAME;
MCAPI extern std::string const ANIMATED_32X32_TEXTURE_CONTROLLER_FIRST_PERSON;
MCAPI extern std::string const ANIMATED_32X32_TEXTURE_CONTROLLER_THIRD_PERSON;
MCAPI extern class HashedString const ANIMATED_32X32_TEXTURE_FRAMES_VARIABLE;
MCAPI extern std::string const ANIMATED_FACE_CONTROLLER_FIRST_PERSON;
MCAPI extern std::string const ANIMATED_FACE_CONTROLLER_THIRD_PERSON;
MCAPI extern std::string const ANIMATED_FACE_NAME;
MCAPI extern class HashedString const ANIMATED_FACE_TEXTURE_FRAMES_VARIABLE;
MCAPI extern int const INVALID_INDEX;
MCAPI extern class mce::UUID const NONE_PIECE_ID;
MCAPI extern std::string const NONE_PIECE_PATH;
MCAPI extern class mce::UUID const NO_PIECE_SELECTED;
MCAPI extern class HashedString const USE_BLINKING_ANIMATION_VARIABLE;
    /**
     * @symbol ?pieceTypeFromString@persona@@YA?AW4PieceType@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     */
    MCAPI enum persona::PieceType pieceTypeFromString(std::string const &);
    /**
     * @symbol ?stringFromPieceType@persona@@YAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PieceType@1@_N@Z
     */
    MCAPI std::string const & stringFromPieceType(enum persona::PieceType, bool);

};