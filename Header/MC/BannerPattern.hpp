/**
 * @file  BannerPattern.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class BannerPattern.
 *
 */
class BannerPattern {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BANNERPATTERN
public:
    class BannerPattern& operator=(class BannerPattern const &) = delete;
    BannerPattern(class BannerPattern const &) = delete;
    BannerPattern() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_BANNERPATTERN
#endif
    /**
     * @symbol ?getIgnoreAux@BannerPattern@@QEBA_NXZ
     */
    MCAPI bool getIgnoreAux() const;
    /**
     * @symbol ?getIngredientItem@BannerPattern@@QEBAAEBVItemStack@@XZ
     */
    MCAPI class ItemStack const & getIngredientItem() const;
    /**
     * @symbol ?getName@BannerPattern@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     */
    MCAPI std::string const & getName() const;
    /**
     * @symbol ?getNameID@BannerPattern@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     */
    MCAPI std::string const & getNameID() const;
    /**
     * @symbol ?getPattern@BannerPattern@@QEBAAEBV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
     */
    MCAPI std::vector<std::string> const & getPattern() const;
    /**
     * @symbol ?hasPattern@BannerPattern@@QEBA_NXZ
     */
    MCAPI bool hasPattern() const;
    /**
     * @symbol ?matchesPatternItem@BannerPattern@@QEBA_NAEBVItemStackBase@@@Z
     */
    MCAPI bool matchesPatternItem(class ItemStackBase const &) const;
    /**
     * @symbol ?requiresIngredientItem@BannerPattern@@QEBA_NXZ
     */
    MCAPI bool requiresIngredientItem() const;
    /**
     * @symbol ?requiresPatternItem@BannerPattern@@QEBA_NXZ
     */
    MCAPI bool requiresPatternItem() const;
    /**
     * @symbol ?findPatternIndexByNameID@BannerPattern@@SA?AV?$optional@E@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
     */
    MCAPI static class std::optional<unsigned char> findPatternIndexByNameID(std::string const &);
    /**
     * @symbol ?getPatternIndexFromName@BannerPattern@@SA?AV?$optional@E@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
     */
    MCAPI static class std::optional<unsigned char> getPatternIndexFromName(std::string const &);
    /**
     * @symbol ?getPatternIndexFromNameID@BannerPattern@@SAEAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     */
    MCAPI static unsigned char getPatternIndexFromNameID(std::string const &);
    /**
     * @symbol ?initPatterns@BannerPattern@@SAXXZ
     */
    MCAPI static void initPatterns();
MCAPI static class BannerPattern * mBase;
MCAPI static class BannerPattern * mBorder;
MCAPI static class BannerPattern * mBricks;
MCAPI static class BannerPattern * mCircle;
MCAPI static class BannerPattern * mCreeper;
MCAPI static class BannerPattern * mCross;
MCAPI static class BannerPattern * mCurlyBorder;
MCAPI static class BannerPattern * mDiagonalLeft;
MCAPI static class BannerPattern * mDiagonalRight;
MCAPI static class BannerPattern * mDiagonalUpLeft;
MCAPI static class BannerPattern * mDiagonalUpRight;
MCAPI static class BannerPattern * mFlower;
MCAPI static class BannerPattern * mGlobe;
MCAPI static class BannerPattern * mGradient;
MCAPI static class BannerPattern * mGradientUp;
MCAPI static class BannerPattern * mHalfHorizontal;
MCAPI static class BannerPattern * mHalfHorizontalBottom;
MCAPI static class BannerPattern * mHalfVertical;
MCAPI static class BannerPattern * mHalfVerticalRight;
MCAPI static class BannerPattern * mMojang;
MCAPI static std::vector<std::unique_ptr<class BannerPattern>> mPatterns;
MCAPI static class BannerPattern * mPiglin;
MCAPI static class BannerPattern * mRhombus;
MCAPI static class BannerPattern * mSkull;
MCAPI static class BannerPattern * mSmallStripes;
MCAPI static class BannerPattern * mSquareBottomLeft;
MCAPI static class BannerPattern * mSquareBottomRight;
MCAPI static class BannerPattern * mSquareTopLeft;
MCAPI static class BannerPattern * mSquareTopRight;
MCAPI static class BannerPattern * mStraightCross;
MCAPI static class BannerPattern * mStripeBottom;
MCAPI static class BannerPattern * mStripeCenter;
MCAPI static class BannerPattern * mStripeDownleft;
MCAPI static class BannerPattern * mStripeDownright;
MCAPI static class BannerPattern * mStripeLeft;
MCAPI static class BannerPattern * mStripeMiddle;
MCAPI static class BannerPattern * mStripeRight;
MCAPI static class BannerPattern * mStripeTop;
MCAPI static class BannerPattern * mTriangleBottom;
MCAPI static class BannerPattern * mTriangleTop;
MCAPI static class BannerPattern * mTrianglesBottom;
MCAPI static class BannerPattern * mTrianglesTop;

};