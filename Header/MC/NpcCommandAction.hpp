/**
 * @file  NpcCommandAction.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class NpcCommandAction.
 *
 */
class NpcCommandAction {

#define AFTER_EXTRA
// Add Member There
public:
struct SavedCommand {
    SavedCommand() = delete;
    SavedCommand(SavedCommand const&) = delete;
    SavedCommand(SavedCommand const&&) = delete;
};

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_NPCCOMMANDACTION
public:
    class NpcCommandAction& operator=(class NpcCommandAction const &) = delete;
    NpcCommandAction(class NpcCommandAction const &) = delete;
#endif

public:
    /**
     * @note   Virtual function table index: 0
     * @symbol 
     */
    virtual ~NpcCommandAction();
    /**
     * @note   Virtual function table index: 1
     * @symbol ?toJson@NpcCommandAction@@UEAA?AVValue@Json@@XZ
     */
    virtual class Json::Value toJson();
    /**
     * @note   Virtual function table index: 2
     * @symbol ?fromJson@NpcCommandAction@@UEAA_NAEBVValue@Json@@@Z
     */
    virtual bool fromJson(class Json::Value const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_NPCCOMMANDACTION
#endif
    /**
     * @symbol ??0NpcCommandAction@@QEAA@XZ
     */
    MCAPI NpcCommandAction();
    /**
     * @symbol ?getCommands@NpcCommandAction@@QEAAAEAV?$vector@USavedCommand@NpcCommandAction@@V?$allocator@USavedCommand@NpcCommandAction@@@std@@@std@@XZ
     */
    MCAPI std::vector<struct NpcCommandAction::SavedCommand> & getCommands();
    /**
     * @symbol ?setCommands@NpcCommandAction@@QEAAX$$QEAV?$vector@USavedCommand@NpcCommandAction@@V?$allocator@USavedCommand@NpcCommandAction@@@std@@@std@@@Z
     */
    MCAPI void setCommands(std::vector<struct NpcCommandAction::SavedCommand> &&);
MCAPI static char const COMMAND_DELIMITER;

//private:

private:
MCAPI static std::string const COMMAND_LINE_KEY;
MCAPI static std::string const COMMAND_VERSION_KEY;

};