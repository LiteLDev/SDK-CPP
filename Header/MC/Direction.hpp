/**
 * @file  Direction.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Direction.
 *
 */
class Direction {

#define AFTER_EXTRA
// Add Member There
public:
enum Type;

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_DIRECTION
public:
    class Direction& operator=(class Direction const &) = delete;
    Direction(class Direction const &) = delete;
    Direction() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_DIRECTION
#endif
MCAPI static enum Direction::Type const DIRECTION_CLOCKWISE[];
MCAPI static enum Direction::Type const DIRECTION_COUNTER_CLOCKWISE[];
MCAPI static unsigned char const DIRECTION_FACING[];
MCAPI static enum Direction::Type const DIRECTION_OPPOSITE[];
MCAPI static enum Direction::Type const FACING_DIRECTION[];
MCAPI static int const STEP_X[];
MCAPI static int const STEP_Z[];
    /**
     * @symbol ?convertFacingDirectionToDirection@Direction@@SA?AW4Type@1@E@Z
     */
    MCAPI static enum Direction::Type convertFacingDirectionToDirection(unsigned char);
    /**
     * @symbol ?getDirection@Direction@@SA?AW4Type@1@MM@Z
     */
    MCAPI static enum Direction::Type getDirection(float, float);

};