/**
 * @file  DanceComponentListener.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockSourceListener.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class DanceComponentListener.
 *
 */
class DanceComponentListener : public BlockSourceListener {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_DANCECOMPONENTLISTENER
public:
    class DanceComponentListener& operator=(class DanceComponentListener const &) = delete;
    DanceComponentListener(class DanceComponentListener const &) = delete;
    DanceComponentListener() = delete;
#endif

public:
    /**
     * @note   Virtual function table index: 0
     * @symbol 
     */
    virtual ~DanceComponentListener();
    /**
     * @note   Virtual function table index: 1
     * @symbol 
     */
    virtual void __unk_vfn_1();
    /**
     * @note   Virtual function table index: 3
     * @symbol 
     */
    virtual void __unk_vfn_3();
    /**
     * @note   Virtual function table index: 4
     * @symbol 
     */
    virtual void __unk_vfn_4();
    /**
     * @note   Virtual function table index: 6
     * @symbol 
     */
    virtual void __unk_vfn_6();
    /**
     * @note   Virtual function table index: 8
     * @symbol 
     */
    virtual void __unk_vfn_8();
    /**
     * @note   Virtual function table index: 9
     * @symbol 
     */
    virtual void __unk_vfn_9();
    /**
     * @note   Virtual function table index: 10
     * @symbol 
     */
    virtual void __unk_vfn_10();
    /**
     * @note   Virtual function table index: 11
     * @symbol ?addParticle@LevelListener@@UEAAPEAVParticle@@W4ParticleType@@AEBVVec3@@1HPEBVCompoundTag@@_N@Z
     */
    virtual class Particle * addParticle(enum ParticleType, class Vec3 const &, class Vec3 const &, int, class CompoundTag const *, bool);
    /**
     * @note   Virtual function table index: 12
     * @symbol 
     */
    virtual void __unk_vfn_12();
    /**
     * @note   Virtual function table index: 13
     * @symbol 
     */
    virtual void __unk_vfn_13();
    /**
     * @note   Virtual function table index: 14
     * @symbol 
     */
    virtual void __unk_vfn_14();
    /**
     * @note   Virtual function table index: 15
     * @symbol 
     */
    virtual void __unk_vfn_15();
    /**
     * @note   Virtual function table index: 16
     * @symbol 
     */
    virtual void __unk_vfn_16();
    /**
     * @note   Virtual function table index: 17
     * @symbol 
     */
    virtual void __unk_vfn_17();
    /**
     * @note   Virtual function table index: 18
     * @symbol 
     */
    virtual void __unk_vfn_18();
    /**
     * @note   Virtual function table index: 19
     * @symbol 
     */
    virtual void __unk_vfn_19();
    /**
     * @note   Virtual function table index: 20
     * @symbol 
     */
    virtual void __unk_vfn_20();
    /**
     * @note   Virtual function table index: 21
     * @symbol 
     */
    virtual void __unk_vfn_21();
    /**
     * @note   Virtual function table index: 22
     * @symbol 
     */
    virtual void __unk_vfn_22();
    /**
     * @note   Virtual function table index: 23
     * @symbol 
     */
    virtual void __unk_vfn_23();
    /**
     * @note   Virtual function table index: 24
     * @symbol 
     */
    virtual void __unk_vfn_24();
    /**
     * @note   Virtual function table index: 25
     * @symbol 
     */
    virtual void __unk_vfn_25();
    /**
     * @note   Virtual function table index: 26
     * @symbol 
     */
    virtual void __unk_vfn_26();
    /**
     * @note   Virtual function table index: 27
     * @symbol 
     */
    virtual void __unk_vfn_27();
    /**
     * @note   Virtual function table index: 28
     * @symbol 
     */
    virtual void __unk_vfn_28();
    /**
     * @note   Virtual function table index: 29
     * @symbol 
     */
    virtual void __unk_vfn_29();
    /**
     * @note   Virtual function table index: 30
     * @symbol ?levelSoundEvent@DanceComponentListener@@UEAAXW4LevelSoundEvent@@AEBVVec3@@HAEBUActorDefinitionIdentifier@@_N3@Z
     */
    virtual void levelSoundEvent(enum LevelSoundEvent, class Vec3 const &, int, struct ActorDefinitionIdentifier const &, bool, bool);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_DANCECOMPONENTLISTENER
#endif

};