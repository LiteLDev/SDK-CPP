/**
 * @file  ResourcePacksInfoPacket.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Packet.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
#include "PackInfoData.hpp"
#include "PackIdVersion.hpp"

#undef BEFORE_EXTRA

/**
 * @brief MC class ResourcePacksInfoPacket.
 *
 */
class ResourcePacksInfoPacket : public Packet {

#define AFTER_EXTRA
// Add Member There
public:
    bool mTexturePackRequired;
    bool mHasScripts;
    bool mForceServerPacks;
    std::vector<struct PackInfoData> mAddOnPacks;
    std::vector<struct PackInfoData> mTexturePacks;
#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_RESOURCEPACKSINFOPACKET
public:
    class ResourcePacksInfoPacket& operator=(class ResourcePacksInfoPacket const &) = delete;
    ResourcePacksInfoPacket(class ResourcePacksInfoPacket const &) = delete;
#endif

public:
    /**
     * @note   Virtual function table index: 0
     * @symbol 
     */
    virtual ~ResourcePacksInfoPacket();
    /**
     * @note   Virtual function table index: 1
     * @symbol ?getId@ResourcePacksInfoPacket@@UEBA?AW4MinecraftPacketIds@@XZ
     */
    virtual enum MinecraftPacketIds getId() const;
    /**
     * @note   Virtual function table index: 2
     * @symbol ?getName@ResourcePacksInfoPacket@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     */
    virtual std::string getName() const;
    /**
     * @note   Virtual function table index: 3
     * @symbol ?write@ResourcePacksInfoPacket@@UEBAXAEAVBinaryStream@@@Z
     */
    virtual void write(class BinaryStream &) const;
    /**
     * @note   Virtual function table index: 6
     * @symbol ?_read@ResourcePacksInfoPacket@@EEAA?AW4StreamReadResult@@AEAVReadOnlyBinaryStream@@@Z
     */
    virtual enum StreamReadResult _read(class ReadOnlyBinaryStream &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_RESOURCEPACKSINFOPACKET
#endif
    /**
     * @symbol ??0ResourcePacksInfoPacket@@QEAA@_NAEAV?$vector@UPackInfoData@@V?$allocator@UPackInfoData@@@std@@@std@@10@Z
     */
    MCAPI ResourcePacksInfoPacket(bool, std::vector<struct PackInfoData> &, std::vector<struct PackInfoData> &, bool);
    /**
     * @symbol ??0ResourcePacksInfoPacket@@QEAA@XZ
     */
    MCAPI ResourcePacksInfoPacket();

};