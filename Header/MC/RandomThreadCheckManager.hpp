/**
 * @file  RandomThreadCheckManager.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class RandomThreadCheckManager.
 *
 */
class RandomThreadCheckManager {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_RANDOMTHREADCHECKMANAGER
public:
    class RandomThreadCheckManager& operator=(class RandomThreadCheckManager const &) = delete;
    RandomThreadCheckManager(class RandomThreadCheckManager const &) = delete;
    RandomThreadCheckManager() = delete;
#endif

public:
    /**
     * @note   Virtual function table index: 0
     * @symbol 
     */
    virtual ~RandomThreadCheckManager();
    /**
     * @note   Virtual function table index: 1
     * @symbol 
     */
    virtual void __unk_vfn_1();
    /**
     * @note   Virtual function table index: 2
     * @symbol 
     */
    virtual void __unk_vfn_2();
    /**
     * @note   Virtual function table index: 3
     * @symbol 
     */
    virtual void __unk_vfn_3();
    /**
     * @note   Virtual function table index: 4
     * @symbol 
     */
    virtual void __unk_vfn_4();
    /**
     * @note   Virtual function table index: 5
     * @symbol 
     */
    virtual void __unk_vfn_5();
    /**
     * @note   Virtual function table index: 6
     * @symbol ?onAppResumed@RandomThreadCheckManager@@UEAAXXZ
     */
    virtual void onAppResumed();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_RANDOMTHREADCHECKMANAGER
#endif

//private:

private:
MCAPI static std::unique_ptr<class RandomThreadCheckManager> mInstance;
MCAPI static class std::recursive_mutex mMutex;

};