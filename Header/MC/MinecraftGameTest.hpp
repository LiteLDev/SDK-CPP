/**
 * @file  MinecraftGameTest.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockSourceListener.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class MinecraftGameTest.
 *
 */
class MinecraftGameTest : public BlockSourceListener {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MINECRAFTGAMETEST
public:
    class MinecraftGameTest& operator=(class MinecraftGameTest const &) = delete;
    MinecraftGameTest(class MinecraftGameTest const &) = delete;
    MinecraftGameTest() = delete;
#endif

public:
    /**
     * @note   Virtual function table index: 0
     * @symbol 
     */
    virtual ~MinecraftGameTest();
    /**
     * @note   Virtual function table index: 1
     * @symbol 
     */
    virtual void __unk_vfn_1();
    /**
     * @note   Virtual function table index: 3
     * @symbol 
     */
    virtual void __unk_vfn_3();
    /**
     * @note   Virtual function table index: 4
     * @symbol 
     */
    virtual void __unk_vfn_4();
    /**
     * @note   Virtual function table index: 6
     * @symbol 
     */
    virtual void __unk_vfn_6();
    /**
     * @note   Virtual function table index: 8
     * @symbol 
     */
    virtual void __unk_vfn_8();
    /**
     * @note   Virtual function table index: 9
     * @symbol 
     */
    virtual void __unk_vfn_9();
    /**
     * @note   Virtual function table index: 10
     * @symbol 
     */
    virtual void __unk_vfn_10();
    /**
     * @note   Virtual function table index: 11
     * @symbol ?addParticle@LevelListener@@UEAAPEAVParticle@@W4ParticleType@@AEBVVec3@@1HPEBVCompoundTag@@_N@Z
     */
    virtual class Particle * addParticle(enum ParticleType, class Vec3 const &, class Vec3 const &, int, class CompoundTag const *, bool);
    /**
     * @note   Virtual function table index: 12
     * @symbol 
     */
    virtual void __unk_vfn_12();
    /**
     * @note   Virtual function table index: 13
     * @symbol 
     */
    virtual void __unk_vfn_13();
    /**
     * @note   Virtual function table index: 14
     * @symbol 
     */
    virtual void __unk_vfn_14();
    /**
     * @note   Virtual function table index: 15
     * @symbol 
     */
    virtual void __unk_vfn_15();
    /**
     * @note   Virtual function table index: 16
     * @symbol 
     */
    virtual void __unk_vfn_16();
    /**
     * @note   Virtual function table index: 17
     * @symbol 
     */
    virtual void __unk_vfn_17();
    /**
     * @note   Virtual function table index: 18
     * @symbol 
     */
    virtual void __unk_vfn_18();
    /**
     * @note   Virtual function table index: 19
     * @symbol 
     */
    virtual void __unk_vfn_19();
    /**
     * @note   Virtual function table index: 20
     * @symbol 
     */
    virtual void __unk_vfn_20();
    /**
     * @note   Virtual function table index: 21
     * @symbol 
     */
    virtual void __unk_vfn_21();
    /**
     * @note   Virtual function table index: 22
     * @symbol 
     */
    virtual void __unk_vfn_22();
    /**
     * @note   Virtual function table index: 23
     * @symbol 
     */
    virtual void __unk_vfn_23();
    /**
     * @note   Virtual function table index: 24
     * @symbol 
     */
    virtual void __unk_vfn_24();
    /**
     * @note   Virtual function table index: 25
     * @symbol 
     */
    virtual void __unk_vfn_25();
    /**
     * @note   Virtual function table index: 26
     * @symbol ?onLevelDestruction@MinecraftGameTest@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     */
    virtual void onLevelDestruction(std::string const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MINECRAFTGAMETEST
#endif
    /**
     * @symbol ??0MinecraftGameTest@@QEAA@AEAVLevel@@@Z
     */
    MCAPI MinecraftGameTest(class Level &);
    /**
     * @symbol ?clearAllTests@MinecraftGameTest@@QEAAXAEAVBlockSource@@@Z
     */
    MCAPI void clearAllTests(class BlockSource &);
    /**
     * @symbol ?getRegistry@MinecraftGameTest@@QEAAAEAVGameTestRegistry@gametest@@XZ
     */
    MCAPI class gametest::GameTestRegistry & getRegistry();
    /**
     * @symbol ?getTicker@MinecraftGameTest@@QEAAAEAVGameTestTicker@gametest@@XZ
     */
    MCAPI class gametest::GameTestTicker & getTicker();
    /**
     * @symbol ?loadExistingTests@MinecraftGameTest@@QEAAXAEAVLevel@@@Z
     */
    MCAPI void loadExistingTests(class Level &);
    /**
     * @symbol ?registerDefaultGameBatches@MinecraftGameTest@@QEAAXAEAVLevel@@@Z
     */
    MCAPI void registerDefaultGameBatches(class Level &);
    /**
     * @symbol ?registerNativeGameTests@MinecraftGameTest@@QEAAXXZ
     */
    MCAPI void registerNativeGameTests();
    /**
     * @symbol ?runTest@MinecraftGameTest@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@AEAVDimension@@AEBUTestParameters@gametest@@@Z
     */
    MCAPI std::string runTest(std::string const &, class Dimension &, struct gametest::TestParameters const &);
    /**
     * @symbol ?runTestAt@MinecraftGameTest@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVBlockSource@@AEBVBlockPos@@V?$optional@W4Rotation@@@3@@Z
     */
    MCAPI std::string runTestAt(class BlockSource &, class BlockPos const &, class std::optional<enum Rotation>);
    /**
     * @symbol ?runTests@MinecraftGameTest@@QEAAAEBV?$vector@V?$shared_ptr@VBaseGameTestInstance@gametest@@@std@@V?$allocator@V?$shared_ptr@VBaseGameTestInstance@gametest@@@std@@@2@@std@@AEAVDimension@@$$QEAUTestParameters@gametest@@@Z
     */
    MCAPI std::vector<class std::shared_ptr<class gametest::BaseGameTestInstance>> const & runTests(class Dimension &, struct gametest::TestParameters &&);

//private:
    /**
     * @symbol ?_runTestPreparation@MinecraftGameTest@@AEAAXAEBVBaseGameTestFunction@gametest@@@Z
     */
    MCAPI void _runTestPreparation(class gametest::BaseGameTestFunction const &);

private:

};